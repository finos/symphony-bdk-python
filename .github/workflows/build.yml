name: build

on:
  push:
    branches: [ "main", "*-rc" ]
  pull_request:
    branches: [ "main", "*-rc" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.9', '3.10' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pypoetry/virtualenvs
          - os: macos-latest
            path: ~/Library/Caches/pypoetry/virtualenvs
          - os: windows-latest
            path: ~\AppData\Local\pypoetry\Cache\virtualenvs

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Cache poetry
        uses: actions/cache@v4
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-poetry-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ steps.setup-python.outputs.python-version }}-
      - name: Install dependencies
        run: poetry install

      - name: Run tests with coverage
        run: poetry run pytest
        timeout-minutes: 10

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}-${{ github.run_id }}
          path: test-results/junit.xml
        if: ${{ always() }}

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage-${{ matrix.os }}-${{ matrix.python-version }}-${{ github.run_id }}
          path: htmlcov
        if: ${{ always() }}
