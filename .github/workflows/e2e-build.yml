name: build

on:
  push:
    branches: [ "main", "*-rc" ]
  pull_request:
    branches: [ "main", "*-rc" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.12' ]
        os: [ ubuntu-latest ]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pypoetry/virtualenvs
          - os: macos-latest
            path: ~/Library/Caches/pypoetry/virtualenvs
          - os: windows-latest
            path: ~\AppData\Local\pypoetry\Cache\virtualenvs

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}

      - name: Install Poetry
        run: pip install poetry

      - name: Cache poetry
        uses: actions/cache@v4
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-poetry-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ steps.setup-python.outputs.python-version }}-
      - name: Install dependencies
        run: poetry install

      - name: Run e2e tests with coverage
        env:
            TEST_RSA_KEY: ${{ secrets.TEST_RSA_KEY }}
            MSG_BOT_USERNAME: ${{ vars.MSG_BOT_USERNAME }}
            FEED_BOT_USERNAME: ${{ vars.FEED_BOT_USERNAME }}
            STREAM_ID: ${{ vars.STREAM_ID }}
            SYMPHONY_HOST: ${{ vars.SYMPHONY_HOST }}
            TEST_USER_ID: ${{ vars.TEST_SYM_USER_ID }}
            BOT_USER_ID: ${{ vars.BOT_USER_ID }}
        run: poetry run pytest
        timeout-minutes: 10

